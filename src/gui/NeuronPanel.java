/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

/**
 *
 * @author Station
 */
public class NeuronPanel extends javax.swing.JPanel {
    
    private final float SCALE = 100f;

    /**
     * Creates new form NeuronPanel
     */
    public NeuronPanel() {
        initComponents();
    }
    
    /**
     * Displaying Neurons's weights and State.
     * @param weightsVector
     * @param state
     */
    public void displayNeuron(float [] weightsVector, float state) {
        this.redProgressBar.setValue   (this.calculateDisplayedValue(weightsVector[0]));
        this.greenProgressBar.setValue (this.calculateDisplayedValue(weightsVector[1]));
        this.blueProgressBar.setValue  (this.calculateDisplayedValue(weightsVector[2]));
        this.yellowProgressBar.setValue(this.calculateDisplayedValue(weightsVector[3]));
        this.stateProgressBar.setValue (this.calculateDisplayedValue(state));
    }
    
    
    
    private int calculateDisplayedValue(float value) {
        return (int)(value * this.SCALE);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        redProgressBar = new javax.swing.JProgressBar();
        greenProgressBar = new javax.swing.JProgressBar();
        blueProgressBar = new javax.swing.JProgressBar();
        yellowProgressBar = new javax.swing.JProgressBar();
        stateProgressBar = new javax.swing.JProgressBar();

        redProgressBar.setValue(50);
        redProgressBar.setPreferredSize(new java.awt.Dimension(100, 20));
        redProgressBar.setString("Red");
        redProgressBar.setStringPainted(true);

        greenProgressBar.setValue(50);
        greenProgressBar.setPreferredSize(new java.awt.Dimension(100, 20));
        greenProgressBar.setString("Green");
        greenProgressBar.setStringPainted(true);

        blueProgressBar.setValue(50);
        blueProgressBar.setPreferredSize(new java.awt.Dimension(100, 20));
        blueProgressBar.setString("Blue");
        blueProgressBar.setStringPainted(true);

        yellowProgressBar.setValue(50);
        yellowProgressBar.setPreferredSize(new java.awt.Dimension(100, 20));
        yellowProgressBar.setString("Yellow");
        yellowProgressBar.setStringPainted(true);

        stateProgressBar.setOrientation(1);
        stateProgressBar.setValue(50);
        stateProgressBar.setPreferredSize(new java.awt.Dimension(100, 20));
        stateProgressBar.setString("State");
        stateProgressBar.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(redProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(greenProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blueProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yellowProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stateProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stateProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(redProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(greenProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(blueProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yellowProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar blueProgressBar;
    private javax.swing.JProgressBar greenProgressBar;
    private javax.swing.JProgressBar redProgressBar;
    private javax.swing.JProgressBar stateProgressBar;
    private javax.swing.JProgressBar yellowProgressBar;
    // End of variables declaration//GEN-END:variables
}
